service: payline

plugins:
    - serverless-offline
    - serverless-plugin-typescript

custom:
    envStage: ${env:BRANCH, 'master'}
    stage: ${opt:stage, self:custom.envStage}
    configuration: ${env:CONFIGURATION, self:custom:stage}

provider:
    name: 'aws'
    runtime: 'nodejs6.10'
    stage: ${self:custom.stage} # Set the default stage used. Default is dev
    region: ${opt:region, 'eu-west-3'} # Overwrite the default region used. Default is us-east-1
    memorySize: 128 # Overwrite the default memory size. Default is 1024
    timeout: 10 # The default is 6 seconds. Note: API Gateway current maximum is 30 seconds
    logRetentionInDays: 30 # Set the default RetentionInDays for a CloudWatch LogGroup
    versionFunctions: true # Optional function versioning
    environment: ${file(./environment/${self:custom.configuration}.yml)} # default env variables from the files per stage

package: # Optional deployment packaging configuration
    include: # Specify the directories and files which should be included in the deployment package
        - src/**
        - handler.ts
    exclude: # Specify the directories and files which should be excluded in the deployment package
        - .git/**
        - .idea/**
    excludeDevDependencies: true # Config if Serverless should automatically exclude dev dependencies in the deployment package. Defaults to true

functions:
    createWallet:
        handler: handler.createWallet
    getWallet:
        handler: handler.getWallet
    updateWallet:
        handler: handler.updateWallet
    disableWallet:
        handler: handler.disableWallet
    doWebPayment:
        handler: handler.doWebPayment
    doCapture:
        handler: handler.doCapture
    doRefund:
        handler: handler.doRefund
    scheduleWalletPayment:
        handler: handler.scheduleWalletPayment
    validateCard:
        handler: handler.validateCard
    doReset:
        handler: handler.doReset
    doAuthorization:
        handler: handler.doAuthorization
    doReAuthorization:
        handler: handler.doReAuthorization
    doWalletPayment:
        handler: handler.doWalletPayment
    transactionDetail:
        handler: handler.transactionDetail
    runAction:
        handler: handler.runAction
