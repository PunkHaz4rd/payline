type Query {
    # Get information for the wallet
    getWallet(merchantId: string!, accessKey: string!, contractId: string!, environment: string!,
        walletId: String!): WalletOutput!
}

type Mutation {
    # Create new wallet - needs to generate id first.
    createWallet(merchantId: string!, accessKey: string!, contractId: string!, environment: string!,
        walletId: String!, card: CardInput!): WalletOutput!
}

input CardInput {
    number: String!
}

type WalletOutput {
    walletId: String!
}

schema {
    query: Query
    mutation: Mutation
}
